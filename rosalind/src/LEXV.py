'''
Created Dec. 1 2015
@author Carl J. Raymond
'''

# Generates words in sequence
def lexv(alphabet, length):

	# Augment the alphabet with the empty string at position 0
	augmented = [''] + alphabet

	# Index is a list of indices of characters in the augemented alphabet.
	# Start by creating an index of all zeroes, which corresponds to an empty string.
	index = [0] * length

	# The first several indexes for the 3-character alphabet DNA and length 3 are
	# 0 0 0		(empty)
	# 1 0 0		D
	# 1 1 0		D D
	# 1 1 1		D D D
	# 1 1 2		D D N
	# 1 1 3		D D A
	# 1 2 0		D A
	# 1 2 1		D A D
	# 1 2 2		D A A
	# 1 2 3		D A N
	# 1 3 0		D N
	# 1 3 1		D N D
	
	# Iterate to the next index by finding the increment point.
	# When the index contains one or more zeroes at the right end, the leftmost zero is the increment point.
	# The zeroes are always contiguous, and always at the right end of the list, so the first zero from the
	# left will be in increment point.
	# When the index contains no zeroes, the increment point is the rightmost digit that is less than
	# the size of the alphabet.
	# When neither condition can be satisfied, the generator is done.
	#
	# Once the increment point is found, the next index is generated by incrementing the digit at
	# the increment point, and filling the following array elements with zero.
	# The corresponding word is generated by concatenating the characters in the alphabet corresponding
	# to the index values.

	size = len(alphabet)

	while True:
		# Find increment point
		if 0 in index:
			pos = index.index(0)
		else:
			for pos in xrange(length-1, -1, -1):
				if index[pos] != size:
					break
			else:
				return
				
		# Increment at that point, and set subsequent values to 0
		index[pos] += 1
		for z in xrange(pos+1, length):
			index[z] = 0
		
		yield "".join(augmented[p] for p in index)

	
with open("data/rosalind_lexv.txt") as spec:
    alphabet = spec.readline().split();
    length = int( spec.readline());

print alphabet
print length

with open("data/rosalind_lexv.out", "w+") as result:
	for index in lexv(alphabet, length):
		result.write(index)
		result.write('\n')
